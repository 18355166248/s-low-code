{"version":3,"file":"static/js/848.9573780b.chunk.js","mappings":"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","sources":["pages/Project/Project.context.ts","pages/Project/FilterFormProject.tsx","pages/Project/ModalDialogProject.tsx","pages/Project/Project.models.ts","pages/Project/TableProject.tsx","pages/Project/indexProject.tsx","services/project.ts"],"sourcesContent":["import { createContext, useContext } from 'react';\r\n\r\nconst initState: any = {};\r\n\r\nexport const ProjectContext = createContext(initState);\r\n\r\nexport const useProjectContext = () =>\r\n  useContext(ProjectContext);\r\n","import { FilterFormLayout } from \"jiang-btp-design\";\r\nimport { Form, Input } from \"antd\";\r\nimport React, { FC } from \"react\";\r\nimport { useProjectContext } from \"./Project.context\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\ninterface Props {}\r\n\r\nconst FilterForm: FC<Props> = () => {\r\n  const {\r\n    setFilterParams,\r\n    getList,\r\n    reset,\r\n    resetPagination,\r\n    openModalHandle,\r\n    setModalOption,\r\n  } = useProjectContext();\r\n\r\n  function onOk() {\r\n    resetPagination();\r\n    getList();\r\n  }\r\n\r\n  function onCreate() {\r\n    setModalOption({\r\n      initialValues: {\r\n        itemSourceType: \"\",\r\n        role: \"\",\r\n        name: \"\",\r\n        channelId: \"\",\r\n      },\r\n      title: \"新增\",\r\n      type: \"add\",\r\n    });\r\n    openModalHandle();\r\n  }\r\n\r\n  function onReset() {\r\n    reset();\r\n  }\r\n\r\n  function onValuesChange(_: any, allValues: any) {\r\n    setFilterParams(allValues);\r\n  }\r\n\r\n  return (\r\n    <FilterFormLayout\r\n      onOk={onOk}\r\n      onCreate={onCreate}\r\n      onReset={onReset}\r\n      onValuesChange={onValuesChange}\r\n    >\r\n      <Form.Item label=\"项目名称\" name=\"name\">\r\n        <Input allowClear={true} />\r\n      </Form.Item>\r\n    </FilterFormLayout>\r\n  );\r\n};\r\n\r\nexport default FilterForm;\r\n","import { Button, Input, Form, notification, Divider, Modal } from \"antd\";\r\nimport React, { FC, useState, useEffect } from \"react\";\r\nimport { useProjectContext } from \"./Project.context\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { createProject, updateProject } from \"@/services/project\";\r\n\r\nfunction add(data: any) {\r\n  return Promise.resolve();\r\n}\r\n\r\nfunction modify(data: any) {\r\n  return Promise.resolve();\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\ninterface Props {}\r\n\r\nconst ModalDialog: FC<Props> = () => {\r\n  const { modalDialogRef, modalOption, getList } = useProjectContext();\r\n  const [visible, setVisible] = useState(false);\r\n\r\n  const formDisabled = modalOption.type === \"detail\";\r\n\r\n  const [form] = Form.useForm();\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    modalDialogRef.current = {\r\n      open: () => setVisible(true),\r\n      close: () => setVisible(false),\r\n    };\r\n  }, []);\r\n\r\n  React.useEffect(() => {\r\n    visible && form.setFieldsValue(modalOption.initialValues);\r\n  }, [visible, modalOption.initialValues]);\r\n\r\n  function submitHandle(formData: any) {\r\n    setLoading(true);\r\n    const requestMethod =\r\n      modalOption.type === \"add\" ? createProject : updateProject;\r\n    if (modalOption.initialValues.id) {\r\n      formData.id = modalOption.initialValues.id;\r\n    }\r\n    requestMethod(formData)\r\n      .then(() => {\r\n        notification.success({ message: `${modalOption.title}成功！` });\r\n        modalDialogRef.current.close();\r\n        getList();\r\n      })\r\n      .finally(() => {\r\n        setLoading(false);\r\n      });\r\n  }\r\n\r\n  function onCancel() {\r\n    form.resetFields();\r\n    modalDialogRef.current.close();\r\n  }\r\n\r\n  return (\r\n    <Modal\r\n      title={modalOption.title}\r\n      open={visible}\r\n      footer={null}\r\n      onCancel={onCancel}\r\n    >\r\n      <Form\r\n        form={form}\r\n        onFinish={submitHandle}\r\n        className=\"mt-5\"\r\n        labelCol={{ flex: \"0 0 100px\" }}\r\n      >\r\n        <Form.Item\r\n          label=\"项目名称\"\r\n          name=\"name\"\r\n          rules={[\r\n            {\r\n              required: true,\r\n              message: \"请输入\",\r\n            },\r\n          ]}\r\n        >\r\n          <Input disabled={formDisabled} />\r\n        </Form.Item>\r\n        <Form.Item label=\"描述\" name=\"description\">\r\n          <Input.TextArea disabled={formDisabled} autoSize />\r\n        </Form.Item>\r\n\r\n        {modalOption.type !== \"detail\" && (\r\n          <>\r\n            <Divider className=\"mt-10\" />\r\n            <div className=\"flex justify-end\">\r\n              <Button onClick={onCancel} className=\"mr-3\">\r\n                取消\r\n              </Button>\r\n              <Button type=\"primary\" htmlType=\"submit\" loading={loading}>\r\n                确定\r\n              </Button>\r\n            </div>\r\n          </>\r\n        )}\r\n      </Form>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default observer(ModalDialog);\r\n","import { getProjectList } from \"@/services/project\";\r\nimport { makeAutoObservable } from \"mobx\";\r\n\r\ninterface Pagination {\r\n  current: number;\r\n  pageSize: number;\r\n  total: number;\r\n}\r\n\r\ninterface Status {\r\n  pending: boolean;\r\n  success: boolean;\r\n  error: boolean;\r\n}\r\n\r\ninterface List extends Status {\r\n  data: any[];\r\n}\r\n\r\ninterface ProjectInterface {\r\n  modalShow: boolean;\r\n  filterParams: any;\r\n  pagination: Pagination;\r\n  list: List;\r\n}\r\n\r\nclass ProjectModels implements ProjectInterface {\r\n  filterParams: any;\r\n  modalShow: boolean;\r\n  pagination: Pagination;\r\n  modalOption: any;\r\n  list = {\r\n    pending: false,\r\n    success: false,\r\n    error: false,\r\n    data: [],\r\n  };\r\n\r\n  modalDialogRef = { current: null };\r\n\r\n  constructor() {\r\n    makeAutoObservable(this);\r\n    this.modalShow = false;\r\n    this.filterParams = {};\r\n    this.modalOption = {};\r\n    this.pagination = {\r\n      current: 1,\r\n      pageSize: 10,\r\n      total: 0,\r\n    };\r\n  }\r\n\r\n  // 新增/编辑/删除\r\n  openModalHandle = () => {\r\n    this.modalShow = true;\r\n    (this.modalDialogRef.current as any).open();\r\n  };\r\n  closeModalHandle = () => {\r\n    this.modalShow = false;\r\n  };\r\n  // 设置过滤器表单数据\r\n  setFilterParams = (allValues: any) => {\r\n    this.filterParams = allValues;\r\n  };\r\n\r\n  // 获取列表\r\n  getList = () => {\r\n    this.list.pending = true;\r\n    getProjectList({\r\n      ...this.filterParams,\r\n      pageSize: this.pagination.pageSize,\r\n      pageNo: this.pagination.current,\r\n    })\r\n      .then((res: any) => {\r\n        this.list = {\r\n          data: res.data,\r\n          pending: false,\r\n          success: true,\r\n          error: false,\r\n        };\r\n        this.pagination = { ...this.pagination, total: res.totalSize };\r\n      })\r\n      .catch(() => {\r\n        this.list.error = true;\r\n        this.list.pending = false;\r\n      });\r\n  };\r\n\r\n  resetPagination = () => {\r\n    this.pagination.current = 1;\r\n  };\r\n\r\n  // 重置过滤器\r\n  reset = () => {\r\n    this.filterParams = {};\r\n    this.resetPagination();\r\n    this.getList();\r\n  };\r\n\r\n  // 设置传入modal的参数\r\n  setModalOption = (option: any) => {\r\n    this.modalOption = option;\r\n  };\r\n\r\n  // 表格分页器触发\r\n  onTableChange = (pagination: { current: number }) => {\r\n    this.pagination = { ...this.pagination, current: pagination.current };\r\n    this.getList();\r\n  };\r\n}\r\n\r\nexport const store = new ProjectModels();\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { observer } from \"mobx-react-lite\";\r\nimport { useProjectContext } from \"./Project.context\";\r\nimport { ActionList } from \"jiang-btp-design\";\r\nimport { Table } from \"antd\";\r\nimport { ColumnsType } from \"antd/es/table\";\r\nimport { useNavigate } from \"react-router-dom\";\r\n\r\n// eslint-disable-next-line @typescript-eslint/no-empty-interface\r\ninterface Props {}\r\n\r\nconst TableProject: FC<Props> = () => {\r\n  const {\r\n    pagination,\r\n    list,\r\n    getList,\r\n    onTableChange,\r\n    setModalOption,\r\n    openModalHandle,\r\n  } = useProjectContext();\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const columns: ColumnsType<object> = [\r\n    {\r\n      title: \"项目名称\",\r\n      dataIndex: \"name\",\r\n      key: \"name\",\r\n      width: 300,\r\n    },\r\n    {\r\n      title: \"描述\",\r\n      dataIndex: \"description\",\r\n      key: \"description\",\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      title: \"操作\",\r\n      fixed: \"right\",\r\n      width: 120,\r\n      render: (record: any) => {\r\n        const actionList: any[] = [\r\n          {\r\n            type: \"text\",\r\n            text: \"搭建\",\r\n            onClick: () => {\r\n              navigate(`/editor/${record.id}`);\r\n            },\r\n          },\r\n          {\r\n            type: \"text\",\r\n            text: \"编辑\",\r\n            onClick: () => {\r\n              setModalOption({\r\n                initialValues: record,\r\n                title: \"编辑\",\r\n                type: \"edit\",\r\n              });\r\n              openModalHandle();\r\n            },\r\n          },\r\n          {\r\n            type: \"text\",\r\n            text: \"查看\",\r\n            onClick: () => {\r\n              setModalOption({\r\n                initialValues: record,\r\n                title: \"查看\",\r\n                type: \"detail\",\r\n              });\r\n              openModalHandle();\r\n            },\r\n          },\r\n        ];\r\n        return <ActionList columns={actionList} />;\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    getList();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  return (\r\n    <Table\r\n      style={{ marginTop: 16 }}\r\n      dataSource={list.data}\r\n      columns={columns}\r\n      rowKey=\"id\"\r\n      loading={list.pending}\r\n      pagination={{ ...pagination, hideOnSinglePage: false }}\r\n      onChange={onTableChange}\r\n    />\r\n  );\r\n};\r\n\r\nexport default observer(TableProject);\r\n","import React, { FC } from 'react';\r\nimport FilterForm from './FilterFormProject';\r\nimport ModalDialog from './ModalDialogProject';\r\nimport { ProjectContext } from './Project.context';\r\nimport { store } from './Project.models';\r\nimport TableView from './TableProject';\r\n\r\n// 项目管理\r\nconst Project: FC = () => {\r\n  return (\r\n    <ProjectContext.Provider value={store}>\r\n      <div className=\"p-6 bg-white rounded-lg shadow-outer\">\r\n        {/* 过滤器 */}\r\n        <FilterForm />\r\n        {/* 表格 */}\r\n        <TableView />\r\n        {/* 新增弹窗 */}\r\n        <ModalDialog />\r\n      </div>\r\n    </ProjectContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Project;\r\n","import $axios from \"./$axios\";\r\nimport {\r\n  DELETE_PROJECT_DTO,\r\n  GET_PROJECT_DTO,\r\n  PROJECT_CODE_DTO,\r\n  PROJECT_DTO,\r\n} from \"./types/project\";\r\n\r\nexport function getProjectList(params: GET_PROJECT_DTO[\"PARAMS\"]) {\r\n  return $axios.get(\"/project\", { params });\r\n}\r\n\r\nexport function getProject(id: string | number) {\r\n  return $axios.get(`/project/${id}`);\r\n}\r\n\r\nexport function createProject(\r\n  data: PROJECT_DTO[\"PARAMS\"]\r\n): Promise<PROJECT_DTO[\"RESPONSE\"]> {\r\n  return $axios.post(\"/project\", data);\r\n}\r\n\r\nexport function updateProject(\r\n  data: PROJECT_DTO[\"PARAMS\"]\r\n): Promise<PROJECT_DTO[\"RESPONSE\"]> {\r\n  return $axios.patch(`/project/${data.id}`, data);\r\n}\r\n\r\nexport function updateProjectCode(\r\n  data: PROJECT_CODE_DTO[\"PARAMS\"]\r\n): Promise<PROJECT_CODE_DTO[\"RESPONSE\"]> {\r\n  return $axios.patch(`/project/code/${data.id}`, data);\r\n}\r\n\r\nexport function deleteProject(data: DELETE_PROJECT_DTO[\"PARAMS\"]) {\r\n  return $axios.delete(`/project/${data.id}`);\r\n}\r\n"],"names":["initState","ProjectContext","createContext","useProjectContext","useContext","_useProjectContext","setFilterParams","getList","reset","resetPagination","openModalHandle","setModalOption","_jsx","_FilterFormLayout","onOk","onCreate","initialValues","itemSourceType","role","name","channelId","title","type","onReset","onValuesChange","_","allValues","children","Form","Item","label","Input","allowClear","observer","modalDialogRef","modalOption","_useState","useState","_useState2","_slicedToArray","visible","setVisible","formDisabled","_Form$useForm","useForm","form","_useState3","_useState4","loading","setLoading","onCancel","resetFields","current","close","useEffect","open","React","setFieldsValue","Modal","footer","_jsxs","onFinish","formData","requestMethod","createProject","updateProject","id","then","notification","success","message","concat","finally","className","labelCol","flex","rules","required","disabled","TextArea","autoSize","_Fragment","Divider","Button","onClick","htmlType","store","_createClass","ProjectModels","_this","_classCallCheck","filterParams","modalShow","pagination","list","pending","error","data","closeModalHandle","getProjectList","_objectSpread","pageSize","pageNo","res","total","totalSize","catch","option","onTableChange","makeAutoObservable","this","navigate","useNavigate","columns","dataIndex","key","width","ellipsis","fixed","render","record","actionList","text","_ActionList","Table","style","marginTop","dataSource","rowKey","hideOnSinglePage","onChange","Provider","value","FilterForm","TableView","ModalDialog","params","$axios","get","getProject","post","patch","updateProjectCode"],"sourceRoot":""}