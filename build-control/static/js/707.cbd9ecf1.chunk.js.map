{"version":3,"file":"static/js/707.cbd9ecf1.chunk.js","mappings":"uPAQMA,ECNC,SAASC,EAAaD,GAC3B,OAAOA,EAAME,KAAI,SAACC,GAChB,IAAIC,OAAWC,EAKf,OAJIC,MAAMC,QAAQJ,EAAKC,YACrBA,EAAWH,EAAaE,EAAKC,WAGxB,CACLI,IAAKL,EAAKM,GACVL,SAAAA,EACAM,MAAOP,EAAKQ,KAEhB,GACF,CDPcV,CAAaW,EAAAA,GA4B3B,EA1BkC,WAChC,IAAMC,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjBC,GAAwCC,EAAAA,EAAAA,UAAmB,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAvDI,EAAYF,EAAA,GAAEG,EAAeH,EAAA,GAWpC,OATAI,EAAAA,EAAAA,YAAU,WACRD,EAAgB,CAACT,EAASW,UAC5B,GAAG,KAQDC,EAAAA,EAAAA,KAACC,EAAAA,EAAI,CACHC,MAAO,CAAEC,MAAO,KAChBP,aAAcA,EACdQ,QATJ,SAAiBC,GAA4B,IAAzBtB,EAAGsB,EAAHtB,IAClBO,EAASP,GACTc,EAAgB,CAACd,GACnB,EAOIuB,KAAK,SACL/B,MAAOA,GAGb,EE3BQgC,EAAmBC,EAAAA,EAAnBD,MAAOE,EAAYD,EAAAA,EAAZC,QAmBf,EAf+B,WAC7B,OACEC,EAAAA,EAAAA,MAACF,EAAAA,EAAM,CAAA7B,SAAA,EACLqB,EAAAA,EAAAA,KAACO,EAAK,CAACL,MAAO,CAAES,gBAAiB,SAAUhC,UACzCqB,EAAAA,EAAAA,KAACY,EAAO,OAEVZ,EAAAA,EAAAA,KAACS,EAAO,CAAA9B,UACNqB,EAAAA,EAAAA,KAACa,EAAAA,SAAQ,CAACC,UAAUd,EAAAA,EAAAA,KAACe,EAAAA,EAAiB,IAAIpC,UACxCqB,EAAAA,EAAAA,KAACgB,EAAAA,GAAM,UAKjB,C,+CCtBMR,EAASS,EAAAA,GACfT,EAAOU,OAASA,EAAAA,GAChBV,EAAOW,OAASA,EAAAA,GAChBX,EAAOC,QAAUA,EAAAA,GACjBD,EAAOD,MAAQA,EAAAA,EACf,K","sources":["pages/Application/AppMenu.tsx","pages/Application/menu.utils.tsx","pages/Application/index.tsx","../../../node_modules/.pnpm/antd@5.6.2_react-dom@18.2.0_react@18.2.0/node_modules/antd/es/layout/index.js"],"sourcesContent":["import { Menu } from \"antd\";\r\nimport { FC, useEffect, useState } from \"react\";\r\nimport { getMenuItems } from \"./menu.utils\";\r\nimport { applicationChildren } from \"@/router\";\r\nimport { useLocation, useNavigate } from \"react-router-dom\";\r\n\r\ninterface AppMenuProps {}\r\n\r\nconst items = getMenuItems(applicationChildren);\r\n\r\nconst AppMenu: FC<AppMenuProps> = () => {\r\n  const location = useLocation();\r\n  const navigate = useNavigate();\r\n\r\n  const [selectedKeys, setSelectedKeys] = useState<string[]>([]);\r\n\r\n  useEffect(() => {\r\n    setSelectedKeys([location.pathname]);\r\n  }, []);\r\n\r\n  function onChange({ key }: { key: string }) {\r\n    navigate(key);\r\n    setSelectedKeys([key]);\r\n  }\r\n\r\n  return (\r\n    <Menu\r\n      style={{ width: 200 }}\r\n      selectedKeys={selectedKeys}\r\n      onClick={onChange}\r\n      mode=\"inline\"\r\n      items={items}\r\n    />\r\n  );\r\n};\r\n\r\nexport default AppMenu;\r\n","import { MenuProps } from \"antd\";\r\n\r\nexport function getMenuItems(items: any[]): MenuProps[\"items\"] {\r\n  return items.map((menu) => {\r\n    let children = undefined;\r\n    if (Array.isArray(menu.children)) {\r\n      children = getMenuItems(menu.children);\r\n    }\r\n\r\n    return {\r\n      key: menu.id,\r\n      children,\r\n      label: menu.name,\r\n    };\r\n  });\r\n}\r\n","import FullScreenLoading from \"@/components/Loading/FullScreenLoading\";\r\nimport { Layout, Spin } from \"antd\";\r\nimport { FC, Suspense } from \"react\";\r\nimport { createPortal } from \"react-dom\";\r\nimport { Outlet } from \"react-router-dom\";\r\nimport AppMenu from \"./AppMenu\";\r\n\r\nconst { Sider, Content } = Layout;\r\n\r\ninterface Props {}\r\n\r\nconst Application: FC<Props> = () => {\r\n  return (\r\n    <Layout>\r\n      <Sider style={{ backgroundColor: \"white\" }}>\r\n        <AppMenu />\r\n      </Sider>\r\n      <Content>\r\n        <Suspense fallback={<FullScreenLoading />}>\r\n          <Outlet />\r\n        </Suspense>\r\n      </Content>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default Application;\r\n","import InternalLayout, { Content, Footer, Header } from './layout';\nimport Sider from './Sider';\nconst Layout = InternalLayout;\nLayout.Header = Header;\nLayout.Footer = Footer;\nLayout.Content = Content;\nLayout.Sider = Sider;\nexport default Layout;"],"names":["items","getMenuItems","map","menu","children","undefined","Array","isArray","key","id","label","name","applicationChildren","location","useLocation","navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","selectedKeys","setSelectedKeys","useEffect","pathname","_jsx","Menu","style","width","onClick","_ref","mode","Sider","Layout","Content","_jsxs","backgroundColor","AppMenu","Suspense","fallback","FullScreenLoading","Outlet","InternalLayout","Header","Footer"],"sourceRoot":""}